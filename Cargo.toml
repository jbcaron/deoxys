[workspace]
members = [
  "crates/client/db",
  "crates/client/exec",
  "crates/client/sync",
  "crates/client/eth",
  "crates/client/rpc",
  "crates/client/gateway",
  "crates/client/telemetry",
  "crates/client/metrics",
  "crates/client/devnet",
  "crates/client/mempool",
  "crates/client/block_import",
  "crates/node",
  "crates/primitives/block",
  "crates/primitives/convert",
  "crates/primitives/transactions",
  "crates/primitives/class",
  "crates/primitives/gateway",
  "crates/primitives/receipt",
  "crates/primitives/state_update",
  "crates/primitives/chain_config",
  "crates/primitives/utils",
  "crates/proc-macros",
  "crates/tests",
]
resolver = "2"
default-members = [
  "crates/client/db",
  "crates/client/exec",
  "crates/client/sync",
  "crates/client/eth",
  "crates/client/gateway",
  "crates/client/rpc",
  "crates/client/telemetry",
  "crates/client/metrics",
  "crates/client/devnet",
  "crates/client/mempool",
  "crates/client/block_import",
  "crates/node",
  "crates/primitives/block",
  "crates/primitives/convert",
  "crates/primitives/transactions",
  "crates/primitives/class",
  "crates/primitives/gateway",
  "crates/primitives/receipt",
  "crates/primitives/state_update",
  "crates/primitives/chain_config",
  "crates/primitives/utils",
  "crates/proc-macros",
  "crates/tests",
]

[workspace.lints.rust]
unsafe_code = "forbid"

[workspace.lints.clippy]
print_stdout = "warn"
print_stderr = "warn"
# todo: uncomment these & fix them
# unwrap_used = "warn"
# missing_docs = "warn"

[profile.dev]
incremental = true

[profile.release]
panic = "unwind"

[profile.production]
codegen-units = 1    # Setting this to 1 allows for more optimizations at the cost of slower compile time
inherits = "release"
lto = "fat"          # Enables Link Time Optimization, enabling more aggressive optimizations across the entire codebase
opt-level = 3        # Optimize for speed regardless of binary size or compile time
rpath = false        # Disables adding rpath to the binary
strip = "symbols"    # Removes debug info and symbold from final binary

[workspace.package]
authors = ["Madara <https://github.com/madara-alliance>"]
homepage = "https://madara.build"
edition = "2021"
repository = "https://github.com/madara-alliance/madara/"
version = "0.7.0"
license = "Apache-2.0"

[workspace.dependencies]
rocksdb = { version = "0.22", features = [
  # "multi-threaded-cf",
] }

# Bonsai trie dependencies
bonsai-trie = { default-features = false, git = "https://github.com/cchudant/bonsai-trie.git", branch = "fix_inserts_remove_leaks", features = [
  "std",
] }

# Madara proc macros
m-proc-macros = { path = "crates/proc-macros", default-features = false }

# Madara primtitives
mp-block = { path = "crates/primitives/block", default-features = false }
mp-convert = { path = "crates/primitives/convert", default-features = false }
mp-transactions = { path = "crates/primitives/transactions", default-features = false }
mp-class = { path = "crates/primitives/class", default-features = false }
mp-gateway = { path = "crates/primitives/gateway", default-features = false }
mp-receipt = { path = "crates/primitives/receipt", default-features = false }
mp-state-update = { path = "crates/primitives/state_update", default-features = false }
mp-utils = { path = "crates/primitives/utils", default-features = false }
mp-chain-config = { path = "crates/primitives/chain_config", default-features = false }

# Madara client
mc-telemetry = { path = "crates/client/telemetry" }
mc-db = { path = "crates/client/db" }
mc-exec = { path = "crates/client/exec" }
mc-rpc = { path = "crates/client/rpc" }
mc-gateway = { path = "crates/client/gateway" }
mc-sync = { path = "crates/client/sync" }
mc-eth = { path = "crates/client/eth" }
mc-metrics = { path = "crates/client/metrics" }
mc-mempool = { path = "crates/client/mempool" }
mc-block-import = { path = "crates/client/block_import" }
mc-devnet = { path = "crates/client/devnet" }

# Starknet dependencies
cairo-vm = "=1.0.1"
starknet-core = "0.11"
starknet-crypto = "0.7"
starknet-providers = "0.11"
starknet-signers = "0.9"
starknet = "0.11.0"

starknet-types-core = { version = "0.1.5", default-features = false, features = [
  "hash",
] }

blockifier = "=0.8.0-rc.3"
starknet_api = "=0.13.0-rc.1"
cairo-lang-starknet-classes = "=2.7.0"
cairo-lang-utils = "=2.7.0"

alloy = { version = "0.4.0", features = [
  "node-bindings",
  "rpc-types",
  "provider-http",
  "contract",
  "node-bindings",
] }

# Other third party dependencies
paste = "1.0.15"
anyhow = "1.0"
assert_matches = "1.5"
async-trait = "0.1"
sha3 = "0.10"
bitvec = { version = "1.0", default-features = false, features = ["std"] }
clap = { version = "4.4" }
flate2 = "1.0"
futures = { version = "0.3", default-features = false, features = ["std"] }
jsonrpsee = { version = "0.22", default-features = false, features = [
  "server",
] }
tower = { version = "0.4", features = ["util"] }
tower-http = { version = "0.4", features = ["cors"] }
governor = "0.6"
hyper = { version = "0.14", features = ["full"] }
hyper-tls = "0.5"
http = "1.1.0"
ip_network = "0.4"
lazy_static = { version = "1.4", default-features = false }
once_cell = "1.19"
log = { version = "0.4", features = [
  "std",
  "kv_std",
  "release_max_level_debug",
] }
num-traits = "0.2"
num-bigint = "0.4"
primitive-types = "0.12"
rand = "0.8"
indoc = "2"
reqwest = { version = "0.12", features = ["blocking", "json"] }
rstest = "0.18"
serde = { version = "1.0", default-features = false, features = ["std"] }
serde_with = "3.9"
serde_json = { version = "1.0", default-features = false, features = ["std"] }
serde_yaml = { version = "0.9.34" }
thiserror = "1.0"
tokio = { version = "1.34", features = ["signal", "rt"] }
url = { version = "2.4", features = ["serde"] }
rayon = "1.10"
bincode = "1.3"
prometheus = "0.13.4"
fdlimit = "0.3.0"
proptest = "1.5.0"
proptest-derive = "0.5.0"
dotenv = "0.15.0"
httpmock = "0.7.0"
tempfile = "3.10.1"
env_logger = "0.11.3"
mockall = "0.13.0"
serial_test = "3.1.1"
itertools = "0.13.0"
regex = "1.10.5"
bytes = "1.6.0"
crypto-bigint = "0.5.5"

[patch.crates-io]
starknet-core = { git = "https://github.com/kasarlabs/starknet-rs.git", branch = "fork" }
starknet-providers = { git = "https://github.com/kasarlabs/starknet-rs.git", branch = "fork" }

# wait for PR https://github.com/starknet-io/types-rs/pull/76 to be merged
starknet-types-core = { git = "https://github.com/kasarlabs/types-rs.git", branch = "feat-deserialize-v0.1.5" }
